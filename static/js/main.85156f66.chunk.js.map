{"version":3,"sources":["Components/Navbar.js","Components/Editor.js","Wootick.js","Components/Header.js","Components/Services.js","Components/About.js","Components/Team.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","buttonText","_this","this","editMode","react_default","a","createElement","className","type","onClick","toggleEditMode","id","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","getButton","Component","Editor","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","editorHtml","value","handleChange","bind","assertThisInitialized","content","changeContent","index","contentId","Data","extra","lib_default","theme","readOnly","onChange","defaultValue","modules","formats","toolbar","font","list","clipboard","matchVisual","renderData","apiData","Header","getContent","Editor_Editor","src","editedContent","trim","slice","search","lastIndexOf","ReactHtmlParser","Services","_this2","swapUp","About","Team","alt","target","rel","Contact","name","noValidate","placeholder","required","data-validation-required-message","App","setState","temp","myState","localStorage","setItem","JSON","stringify","console","log","isLoaded","getItem","parse","dummy","toConsumableArray","forEach","recivedData","component","comp","map","data","key","indexOf","getElement","style","padding","HashRouter","Wootick_App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85156f66.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\nexport default class Navbar extends Component {\n  getButton(props){\n    var buttonText;\n    if(this.props.editMode) buttonText = \"Get Preview\";\n    else buttonText = \"Start Editing\";\n      return(\n        <button className='btn btn-primary' type=\"button\" \n                onClick= {()=>{\n                  this.props.toggleEditMode()}}\n                > \n                {buttonText}\n                </button>\n      );\n  }\n\n  \n  render() {\n    return (\n      <div >\n      <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top\" id=\"mainNav\">\n      <div className=\"container\">\n        <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">Start Bootstrap</a>\n        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          Menu\n          <i className=\"fas fa-bars\"></i>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav text-uppercase ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#services\">Services</a>\n            </li>\n           \n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#about\">About</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#team\">Team</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#contact\">Contact</a>\n            </li>\n            <li className=\"nav-item\">\n            {\n              this.getButton()\n            }\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill'; \nimport 'react-quill/dist/quill.bubble.css';\nimport Data from '../Data/Data.json'\n\n\nexport default class Editor extends Component { \n  constructor (props) {\n    //const parsedElement= \"<\" +props.type +\">\" +props.value +\"<\" +props.type +\" />\"\n    super(props)\n    this.state = {\n        editorHtml: props.value,\n    }\n    this.handleChange = this.handleChange.bind(this)\n    }\n    \n    handleChange (content) {\n        this.props.changeContent(this.props.index,this.props.contentId,content);\n        Data[this.props.index].extra[this.props.contentId] = content;\n    }\n    \n    render () {\n      return (\n          <ReactQuill\n            theme= 'bubble'\n            readOnly= {this.props.readOnly}\n            onChange={this.handleChange}\n            defaultValue={this.state.editorHtml}\n            modules={Editor.modules}\n            formats={Editor.formats}\n           />\n       )\n    }\n  }\n  \n  /* \n   * Quill modules to attach to editor\n   * See https://quilljs.com/docs/modules/ for complete options\n   */\n  Editor.modules = {\n      toolbar: [\n        [ {'font':[]}],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ 'list': 'bullet' }],\n        ['clean'],\n\n      ],\n    clipboard: {\n      matchVisual: true,\n    }\n  }\n  /* \n   * Quill editor formats\n   * See https://quilljs.com/docs/formats/\n   */\n  Editor.formats = [\n    'header', 'font', 'size',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image', 'video'\n  ];","import React, { Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport Header from './Components/Header';\nimport Services from './Components/Services';\nimport About from './Components/About';\nimport Team from './Components/Team';\nimport Contact from './Components/Contact';\n//import axios from 'axios';\nimport  Data  from \"./Data/Data\";\nvar renderData, apiData;\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      editMode: false,\n      isLoaded: false,\n      myState : {},\n    };\n  }\n\n\n  componentWillMount(){\n  /*\n  axios.get('http://localhost:3040/api/items')\n    .then(res =>{\n      console.log(\"Axios\")\n      apiData=res.data[0].data;\n      console.log(res.data[0].data);\n   */\n      apiData=Data;\n      if(localStorage.getItem('Data')){\n        renderData=JSON.parse(localStorage.getItem('Data'));\n        console.log(\"it's coming from ls\");\n        console.log(renderData);\n      }\n      else{\n        console.log(\"No local storage\")\n        renderData = apiData;\n        localStorage.setItem('Data',JSON.stringify(apiData));\n      }\n      \n      var dummy=[...renderData];\n        dummy.forEach(recivedData =>{\n          if(recivedData.type === 'Navbar')\n            recivedData.component = Navbar;\n          else if(recivedData.type === \"Header\")\n            recivedData.component = Header;\n          else if(recivedData.type === \"Services\")\n            recivedData.component= Services;\n          else if(recivedData.type === \"About\")\n            recivedData.component= About;\n          else if(recivedData.type === \"Team\")\n            recivedData.component= Team;\n          else if(recivedData.type === \"Contact\")\n            recivedData.component= Contact;\n          else{\n          console.log(\"Something went wrong in component names\")\n          console.log(recivedData.type);\n          }\n        });\n        this.setState({\n          isLoaded: true,\n          myState: dummy\n        }) \n    //});\n  }\n  toggleEditMode= () =>{\n    this.setState((state) => ({\n        editMode: !state.editMode\n      })\n    )\n  }\n\n  \n  getElement(){\n    const comp = this.state.myState.map( data =>\n      {\n        return <\n                  data.component \n                  key={this.state.myState.indexOf(data)} \n                  extra={data.extra}\n                  swapUp={this.swapUp}\n                  index={this.state.myState.indexOf(data)}\n                  changeContent={this.changeContent}\n                  editMode= {this.state.editMode}\n                  toggleEditMode = {this.toggleEditMode}\n              />;\n      });\n    const ret =\n              <div >\n                {comp}\n              </div>;\n    return  ret;\n  }\n\n  swapUp = (index) =>{\n    if(index>2){\n      const temp=renderData[index];\n      renderData[index]=renderData[index-1];\n      renderData[index-1]=temp;\n      this.setState({\n        myState: renderData\n      });\n      localStorage.setItem('Data',JSON.stringify(renderData));\n    }\n  }\n\n  changeContent=(index,contentId,content)=>{ \n    renderData[index].extra[contentId]=content;\n    localStorage.setItem('Data',JSON.stringify(renderData));\n    console.log(renderData);\n  }\n\n\n  render() {\n      var isLoaded = this.state.isLoaded;\n      if(!isLoaded){\n        return(\n          <div style={{padding: \"25%\"}}>\n            <h2>\n              Please wait few seconds to get wooticked!!\n            </h2>\n          </div>\n        );\n      }\n      else{\n        return (\n          <div className=\"App\">        \n            {\n              this.getElement()\n            }\n          </div>\n      );\n    }\n  }\n}","import React, { Component } from 'react';\nimport Editor from './Editor';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport default class Header extends Component {\n  changeContent=(index,contentId,content)=>{\n    this.props.changeContent(index,contentId,content)\n  }\n\n  getContent =(contentId)=> {\n    if(this.props.editMode){\n      return(\n        //Return Editor as its in edit moed\n        <Editor\n               readOnly={! this.props.editMode}\n               value={this.props.extra[contentId]}\n               contentId= {contentId}\n               changeContent={this.changeContent}\n               index={this.props.index}\n       />\n      );\n     }\n    else{\n      //When it's not in edit mode\n        var src = this.props.extra[contentId];\n        if(src[0]==='<'){\n          // Content will have extra <p,h1,h2 > tags that we have to remove as we already have declared that before calling this\n          var editedContent= \n          src\n          .trim()\n          .slice(src.search(\">\")+1,src.lastIndexOf(\"</\"));\n        }\n       else{\n        //If content don't have any tags that return that string\n        editedContent=src;\n       }\n      return ReactHtmlParser(editedContent);\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n      <header className=\"masthead\">\n      <div className=\"container\">\n        <div className=\"intro-text\">\n          <div className=\"intro-lead-in\">\n          \n          {this.getContent(0)}\n\n          </div>\n          <div className=\"intro-heading text-uppercase\" >\n          \n          {this.getContent(1)}\n          \n          </div>\n          <a className=\"btn btn-primary btn-xl text-uppercase js-scroll-trigger\" href=\"#services\">Tell Me More</a>\n        </div>\n      </div>\n    </header>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Editor from './Editor';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nexport default class  Services extends Component {\n\n  changeContent=(index,contentId,content)=>{\n    this.props.changeContent(index,contentId,content)\n  }\n\n  getContent =(contentId)=> {\n    if(this.props.editMode){\n      return(\n        //Return Editor as its in edit moed\n        <Editor\n               readOnly={! this.props.editMode}\n               value={this.props.extra[contentId]}\n               contentId= {contentId}\n               changeContent={this.changeContent}\n               index={this.props.index}\n       />\n      );\n     }\n    else{\n      //When it's not in edit mode\n        var src = this.props.extra[contentId];\n        if(src[0]==='<'){\n          // Content will have extra <p,h1,h2 > tags that we have to remove as we already have declared that before calling this\n          var editedContent= \n          src\n          .trim()\n          .slice(src.search(\">\")+1,src.lastIndexOf(\"</\"));\n        }\n       else{\n        //If content don't have any tags that return that string\n        editedContent=src;\n       }\n      return ReactHtmlParser(editedContent);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <section id=\"services\">\n      \n      { (this.props.editMode) ?\n        <button className='btn btn-primary mx-3' type=\"button\" \n            onClick= {()=>{\n              this.props.swapUp(this.props.index)}}\n            >\n            Move up\n        </button>\n        : null\n    }\n\n      <div className =\"container\">\n        <div className =\"row\">\n          <div className =\"col-lg-12 text-center\">\n            <h2 className =\"section-heading text-uppercase\">\n            {this.getContent(0)}\n            </h2>\n            <h3 className =\"section-subheading text-muted\">\n            {this.getContent(1)}\n              </h3>\n          </div>\n        </div>\n        <div className =\"row text-center\">\n          <div className =\"col-md-4\">\n            <span className =\"fa-stack fa-4x\">\n              <i className =\"fas fa-circle fa-stack-2x text-primary\"></i>\n              <i className =\"fas fa-shopping-cart fa-stack-1x fa-inverse\"></i>\n            </span>\n            <h4 className =\"service-heading\">\n\n            {this.getContent(2)}\n\n\n            </h4>\n          \n          <p className =\"text-muted\">    \n          \n          {this.getContent(3)}\n\n          </p>\n\n          </div>\n          <div className =\"col-md-4\">\n            <span className =\"fa-stack fa-4x\">\n              <i className =\"fas fa-circle fa-stack-2x text-primary\"></i>\n              <i className =\"fas fa-laptop fa-stack-1x fa-inverse\"></i>\n            </span>\n            <h4 className =\"service-heading\">\n            \n            {this.getContent(4)}  \n                 \n            </h4>\n          <p className =\"text-muted\">\n            \n            {this.getContent(5)}\n          \n          </p>\n          </div>\n          <div className =\"col-md-4\">\n            <span className =\"fa-stack fa-4x\">\n              <i className =\"fas fa-circle fa-stack-2x text-primary\"></i>\n              <i className =\"fas fa-lock fa-stack-1x fa-inverse\"></i>\n            </span>\n            <h4 className =\"service-heading\">\n\n              {this.getContent(6)}  \n                 \n            </h4>\n            <p className =\"text-muted\">\n\n            {this.getContent(7)}  \n                  \n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport '../CSS/Main.css';\nimport Editor from './Editor';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nexport default class About extends Component {\n\n  changeContent=(index,contentId,content)=>{\n    this.props.changeContent(index,contentId,content)\n  }\n\n  getContent =(contentId)=> {\n    if(this.props.editMode){\n      return(\n        //Return Editor as its in edit moed\n        <Editor\n               readOnly={! this.props.editMode}\n               value={this.props.extra[contentId]}\n               contentId= {contentId}\n               changeContent={this.changeContent}\n               index={this.props.index}\n       />\n      );\n     }\n    else{\n      //When it's not in edit mode\n        var src = this.props.extra[contentId];\n        if(src[0]==='<'){\n          // Content will have extra <p,h1,h2 > tags that we have to remove as we already have declared that before calling this\n          var editedContent= \n          src\n          .trim()\n          .slice(src.search(\">\")+1,src.lastIndexOf(\"</\"));\n        }\n       else{\n        //If content don't have any tags that return that string\n        editedContent=src;\n       }\n      return ReactHtmlParser(editedContent);\n    }\n  }\n\n\n  render() {\n    return (\n    <section id=\"about\">\n    { (this.props.editMode) ?\n        <button className='btn btn-primary mx-3' type=\"button\" \n            onClick= {()=>{\n            // console.log(this.props.extra);\n              this.props.swapUp(this.props.index)}}\n            >\n            Move up\n        </button>\n        : null\n    }\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 offset-3 text-center\">\n            <h2 className=\"section-heading text-uppercase\">\n            \n            {this.getContent(0)}\n\n\n            </h2>\n            <h3 className=\"section-subheading text-muted \">\n            \n            {this.getContent(1)}\n\n            </h3>\n          </div>\n        </div>\n        </div>\n    </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Editor from './Editor';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nexport default class Team extends Component{\n\n  changeContent=(index,contentId,content)=>{\n  this.props.changeContent(index,contentId,content)\n  }\n\n  getContent =(contentId)=> {\n    if(this.props.editMode){\n      return(\n        //Return Editor as its in edit moed\n        <Editor\n               readOnly={! this.props.editMode}\n               value={this.props.extra[contentId]}\n               contentId= {contentId}\n               changeContent={this.changeContent}\n               index={this.props.index}\n       />\n      );\n     }\n    else{\n      //When it's not in edit mode\n        var src = this.props.extra[contentId];\n        if(src[0]==='<'){\n          // Content will have extra <p,h1,h2 > tags that we have to remove as we already have declared that before calling this\n          var editedContent= \n          src\n          .trim()\n          .slice(src.search(\">\")+1,src.lastIndexOf(\"</\"));\n        }\n       else{\n        //If content don't have any tags that return that string\n        editedContent=src;\n       }\n      return ReactHtmlParser(editedContent);\n    }\n  }\n\nrender(){\n    return(\n    <div>\n    <section className=\"bg-light\" id=\"team\">\n   \n    { (this.props.editMode) ?\n        <button className='btn btn-primary mx-3' type=\"button\" \n            onClick= {()=>{\n            // console.log(this.props.extra);\n              this.props.swapUp(this.props.index)}}\n            >\n            Move up\n        </button>\n        : null\n    }\n    \n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center\">\n            <h2 className=\"section-heading text-uppercase\">\n              \n            {this.getContent(0)}\n\n              \n              </h2>\n            <h3 className=\"section-subheading text-muted\">\n              \n            {this.getContent(1)}\n\n            </h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div className=\"team-member\">\n              <img className=\"mx-auto rounded-circle\" src=\"img/team/1.jpg\" alt=\"\" />\n              <h4>\n                \n              {this.getContent(2)}\n\n\n              </h4>\n              <p className=\"text-muted\">\n                \n              {this.getContent(3)}\n \n                        \n                </p>\n              <ul className=\"list-inline social-buttons\">\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-twitter\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"col-sm-4\">\n            <div className=\"team-member\">\n              <img className=\"mx-auto rounded-circle\" src=\"img/team/2.jpg\" alt=\"\" />\n              <h4>\n                \n              {this.getContent(4)}\n             \n                </h4>\n              <p className=\"text-muted\">\n                \n              {this.getContent(5)}\n    \n                </p>\n              <ul className=\"list-inline social-buttons\">\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-twitter\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"col-sm-4\">\n            <div className=\"team-member\">\n              <img className=\"mx-auto rounded-circle\" src=\"img/team/3.jpg\" alt=\"\" />\n              <h4>\n                \n              {this.getContent(6)}\n        \n                </h4>\n              <p className=\"text-muted\">\n                \n              {this.getContent(7)}\n  \n                </p>\n              <ul className=\"list-inline social-buttons\">\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-twitter\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                  </a>\n                </li>\n                <li className=\"list-inline-item\">\n                  <a href='https://allevents.in' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mx-auto text-center\">\n            <p className=\"large text-muted\">\n              \n            {this.getContent(8)}\n        \n              </p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    </div>\n    )\n}\n}","import React, { Component } from 'react';\nimport Editor from './Editor';\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nexport default class Contact extends Component {\n  changeContent=(index,contentId,content)=>{\n    this.props.changeContent(index,contentId,content)\n  }\n\n  getContent =(contentId)=> {\n    if(this.props.editMode){\n      return(\n        //Return Editor as its in edit moed\n        <Editor\n               readOnly={! this.props.editMode}\n               value={this.props.extra[contentId]}\n               contentId= {contentId}\n               changeContent={this.changeContent}\n               index={this.props.index}\n       />\n      );\n     }\n    else{\n      //When it's not in edit mode\n        var src = this.props.extra[contentId];\n        if(src[0]==='<'){\n          // Content will have extra <p,h1,h2 > tags that we have to remove as we already have declared that before calling this\n          var editedContent= \n          src\n          .trim()\n          .slice(src.search(\">\")+1,src.lastIndexOf(\"</\"));\n        }\n       else{\n        //If content don't have any tags that return that string\n        editedContent=src;\n       }\n      return ReactHtmlParser(editedContent);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <section id=\"contact\">\n\n      { (this.props.editMode) ?\n        <button className='btn btn-primary mx-3' type=\"button\" \n            onClick= {()=>{\n            // console.log(this.props.extra);\n              this.props.swapUp(this.props.index)}}\n            >\n            Move up\n        </button>\n        : null\n    }\n    \n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center\">\n            <h2 className=\"section-heading text-uppercase\">\n              {this.getContent(0)}      \n              </h2>\n            <h3 className=\"section-subheading text-muted\">\n              \n            {this.getContent(1)}      \n           \n              </h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <form id=\"contactForm\" name=\"sentMessage\" noValidate=\"novalidate\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"form-group\">\n                    <input className=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Your Name *\" required=\"required\" data-validation-required-message=\"Please enter your name.\" />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                  <div className=\"form-group\">\n                    <input className=\"form-control\" id=\"email\" type=\"email\" placeholder=\"Your Email *\" required=\"required\" data-validation-required-message=\"Please enter your email address.\" />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                  <div className=\"form-group\">\n                    <input className=\"form-control\" id=\"phone\" type=\"tel\" placeholder=\"Your Phone *\" required=\"required\" data-validation-required-message=\"Please enter your phone number.\" />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group\">\n                    <textarea className=\"form-control\" id=\"message\" placeholder=\"Your Message *\" required=\"required\" data-validation-required-message=\"Please enter a message.\"></textarea>\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div className=\"clearfix\"></div>\n                <div className=\"col-lg-12 text-center\">\n                  <div id=\"success\"></div>\n                  <button id=\"sendMessageButton\" className=\"btn btn-primary btn-xl text-uppercase\" type=\"submit\">Send Message</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Wootick from './Wootick';\n\n\nimport './App.css';\n\n\n/*\nconst landingPage = () =>(\n  <div id='lpcontent'>\n    <h3>Welcome to wootick </h3>\n    <Link to='/auth'> Proceed to login signup</Link>\n  </div>\n);\n\nconst noMatch= () =>(\n  <div id='lpcontent'>\n    <h3>\n    You have hit an broken link\n    </h3>\n    <Link to='Wootick'>Click here to go back</Link>\n  </div>\n  )\n*/\n\nclass App extends Component {\n\n \n  \n  render() {\n    return (\n          <Router>\n              <div>\n              \n              <Wootick />\n              </div>\n          </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}